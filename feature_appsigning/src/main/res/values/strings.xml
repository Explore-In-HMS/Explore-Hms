<!--
  ~
  ~   Copyright 2020. Explore in HMS. All rights reserved.
  ~
  ~   Licensed under the Apache License, Version 2.0 (the "License");
  ~   You may not use this file except in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~
  -->

<resources>

    <string name="you_should_not_be_seeing_this_if_you_are_seeing_this_there_is_a_grave_error_occurred">YOU SHOULD NOT BE SEEING THIS! IF YOU ARE SEEING THIS, THERE IS A GRAVE ERROR OCCURRED.</string>
    <string name="desc_default_string">App Signing</string>
    <string name="header_use_cases">Use Cases</string>
    <string name="header_enabling_app_signing_for_a_new_app_app_gallery">Enabling App Signing for a New App - Letting AppGallery Connect Create a Signature Key</string>
    <string name="header_enabling_app_signing_for_a_new_app_export">Enabling App Signing for a New App - Uploading a Signature Key by Yourself</string>
    <string name="header_enabling_app_signing_for_released_app">Enabling App Signing for a Released App</string>
    <string name="header_updating_an_app_enabled_app_signing">Updating an App That Has Enabled the App Signing Service</string>

    <string name="explanation">Explanation</string>

    <string name="desc_use_cases">If you do not use the App Signing service, and your signature key is lost, you cannot update your app on HUAWEI AppGallery. In this case, you will have to use a new package name to release it, or apply to change the signature key, which means all users need to reinstall the app.\n\nIf you use the service, AppGallery Connect will protect your signature key on the server. You only need to maintain your upload key. Even if your upload key is lost, you can still update your app on HUAWEI AppGallery, and users can still update your app.\n\nApp Signing allows you to release an app in App Bundle format on Huawei AppGallery to reduce the size of the app package. \n\nYou can also use this service together with Dynamic Ability for dynamic feature loading. When you release an app in App Bundle format, App Signing can help you compile your AAB package into multiple APKs, and sign them with the signature key managed by AppGallery Connect. This ensures the security of the signature key and improves user experience in app installation.\n</string>
    <string name="desc_enabling_app_signing_for_a_new_app">If you choose to allow AppGallery Connect to create and manage your signature key, you need to submit the key certificate of your upload key to AppGallery Connect. Then, AppGallery Connect automatically generates a signature key. After you upload an app package, AppGallery Connect verifies the identity information in the app package by using the key certificate of the upload key.\n\nIf the verification is successful, AppGallery Connect re-signs the app using the signature key generated by AppGallery Connect. When you update your app, you only need to use the upload key to sign the app package. AppGallery Connect will always use the signature key generated to re-sign the app, ensuring that the signature key is the same as that of the released app.\n</string>
    <string name="desc_enabling_app_signing_for_released_app">In order to use App Signing for a released app, you can only upload your own signature key. Currently, AppGallery Connect does not support generating a new signature key for a released app. You need to use the pepk.jar tool to generate a .zip file that contains the signature key, and upload the .zip file to AppGallery Connect. \n\nFor higher security, you can also submit the key certificate of the upload key. You are advised to use a key different from the signature key. If you do not submit an upload key, you need to use your signature key as the upload key.\n</string>
    <string name="desc_enabling_export_app_signing">If you choose to use your own signature key, you can submit key certificates of your signature key and upload key (optional) in AppGallery Connect. After you upload an app package, AppGallery Connect verifies your identity using the key certificate of the upload key you submitted. \n\nAfter the verification is successful, AppGallery Connect uses the signature key you submitted to re-sign the app. After the signature is successful, AppGallery Connect distributes the app to users. When you update your app, you only need to use the upload key to sign the app package. AppGallery Connect will always use the signature key you upload to re-sign the app, ensuring that the signature key is the same as that of the released app. \n\nThe key certificate of the upload key is optional. If you do not submit the key certificate of the upload key, AppGallery Connect uses the signature key you upload as the upload key for verification by default.\n</string>
    <string name="desc_updating_app_signing">In order to update an app that has enabled App Signing:\n\n\u2022Use the upload key to sign the app package.\n\n\u2022Upload the signed app package.\n\n\u2022Submit the updated app.\n\nAppGallery Connect re-signs the app, and then distributes the signed app to users.\n</string>

    <string name="link_developer_appsigning">https://developer.huawei.com/consumer/en/doc/development/AppGallery-connect-Guides/agc-app_bundle</string>

    <string name="app_signing_explanation1">Android apps use a signature key for signing. Each signature key has an associated key certificate. Devices and services can use the certificate to check whether the app is from a trusted source. For trusted app updates, ensure that the app signature of the update package is the same as that of the installed app so that your app update will be accepted. However, if the signature key is lost or stolen, you cannot update your app. In this case, you will have to use a new package name to release the updated app. This will lead to risks such as user loss.\n\n</string>
    <string name="app_signing_explanation2">It is advised to use App Signing provided by AppGallery Connect. The service can properly manage and protect your app signature key and use the key to sign your app package for distribution. Even if your upload key is lost, you can still update your app on HUAWEI AppGallery, and users can still update your app. \n\n</string>
    <string name="app_signing_explanation3">With App Signing, your upload key certificate and app signature key are encrypted and stored in the encryptor on the cloud. No one can obtain the plaintext key from the encryptor. Even when signing an app, AppGallery Connect sends the content to be signed to the encryptor. The encryptor signs the content and returns the signing result. This ensures high-level encryption throughout the process.\n\n</string>
    <string name="app_signing_explanation4">Currently, App Signing supports only APK and AAB files. You can choose not to use the service if your app is released in an APK package. Note that if you disable the service, you need to ensure the security of your keys. If you upload an AAB package for app release, App Signing is required to convert the AAB file into APK files and use the signature key to sign the APK files.\n\n</string>
    <string name="app_signing_explanation5">For further details, you can use the link below to access to the official documentation of App Signing. \n\nAlso you can slide right to see some features in detail.</string>
</resources>